apiVersion: v1
kind: ConfigMap
metadata:
  name: jans-client-api-cm
  namespace: jans
data:
  CN_CONFIG_ADAPTER: "kubernetes"
  CN_SECRET_ADAPTER: "kubernetes"
  DOMAIN: "demoexample.jans.io"
  CN_LDAP_URL: "opendj:1636"
  CN_SECRET_KUBERNETES_NAMESPACE: "jans"
  CN_CONFIG_KUBERNETES_NAMESPACE: "jans"
  CN_CLIENT_API_APPLICATION_CERT_CN: "jans-client-api"
  CN_CLIENT_API_ADMIN_CERT_CN: "jans-client-api"

---

apiVersion: v1
kind: Service
metadata:
  name: jans-client-api
  labels:
    app: jans-client-api
  namespace: jans
spec:
  ports:
  - port: 8074
    name: jans-client-api
  selector:
    app: jans-client-api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jans-client-api
  labels:
    app: jans-client-api
  namespace: jans
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jans-client-api
  template:
    metadata:
      labels:
        app: jans-client-api
      namespace: jans
    spec:
      containers:
      - name: jans-client-api
        image: docker.io/janssenproject/client-api:1.0.0_dev
        resources:
          requests:
            memory: "1000Mi"
          limits:
            memory: "1536Mi"
        ports:
        - containerPort: 8444
        envFrom:
        - configMapRef:
            name: jans-client-api-cm
        # livenessProbe:
        #   exec:
        #     command: ["python3", "/app/scripts/healthcheck.py"]
        #   initialDelaySeconds: 30
        #   periodSeconds: 30
        # readinessProbe:
        #   exec:
        #     command: ["python3", "/app/scripts/healthcheck.py"]
        #   initialDelaySeconds: 25
        #   periodSeconds: 25
      hostAliases:
      - ip: NGINX_IP
        hostnames:
        - demoexample.jans.io
